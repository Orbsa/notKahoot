title Not KaHoot
script(src='/socket.io/socket.io.js')
h2#quiz-name Quiz name not set
h1#question-text
#answers
    button(onclick='sendName()') Name
    input#user-name(type='text')
script var quizName; //This is set by running fetchQuizTitle


    // Gathering the quiz ID out of the url. 
    let url = new URL(document.URL);
    quizId=new URL(document.URL).searchParams.get("quizId");
    console.log(quizId);
    var userName; //This holds the name the user picked for the quiz. 
    var socket = io();
    var answersDiv = document.getElementById("answers");

    function setQuizTitle(title){
        var quizNameEl = document.getElementById("quiz-name");
        quizNameEl.textContent = title;
    };

    function setQuestionText(title){
        var questionNameEl = document.getElementById("question-text");
        questionNameEl.textContent = title;
    };

    function setAnswers(answers){
        answersDiv.innerHTML = ""; 
            // Clear out answers before setting new ones
        for (x in answers){
            var answer = document.createElement("h3");
            answer.setAttribute("id","answer"+x);
            answer.textContent = answers[x].text;
            answer.setAttribute('onclick','sendAnswer('+x+')');
            answersDiv.appendChild(answer);
        }
    };

        return new Promise(function(resolve,reject){
            QuizURL = "/queryQuiz?id="+quizId;//Quiz id should be accessed by get request. 
            var req = new XMLHttpRequest();
            req.open("GET", QuizURL);
            req.responseType ='json';
            req.onload = function(){
                data = req.response;
                quizName=data.name;
                setQuizTitle(quizName); //Sets the name of the quiz when the name is recieved. 
                resolve("retrieve the name");
            }
            req.send();
        })
    }

    function sendAnswer(answerId){
        socket.emit("quiz-answer-send",{"quizId": quizId, "answerId": answerId, "userName": userName})
        answersDiv.innerHTML = "Answer Sent :^)\nAwaiting Next Question"; 
    }

    function sendName(){
        var nameEl = document.getElementById("user-name");
        if( nameEl.value == ""){
            alert("You must choose a name");
        }
        else{
            userName = nameEl.value;
            //This sends the name to the server. 
            console.log("Sending to server: "+ {"quizId": quizId, "name": nameEl.value});
            socket.emit("quiz-lobby-join",{"quizId": quizId, "name": nameEl.value});
            var answersDiv = document.getElementById("answers");
            answersDiv.innerHTML = "Waiting for quiz to start.";}
    }
    

    //need: quizName, quizQuestion, quizAnswers
    /*This is for recieving quiz information*/
    function quizCreate(quizObj){
        console.log(quizObj);
        setQuizTitle(quizObj.name);
        if('question' in quizObj){
            setQuestionText(quizObj.question.text);
            setAnswers(QuizObj.question.answers);
        }
    }
    socket.on('quiz-client',quizCreate(data));


    // -------On Server-----------------  
    //   io.emit('quiz-client',{
    //     name : QuizCreate.name,
    //     question : QuizCreate.questions[0]
    // }); 
    // This should be sent to a specific client.
    // QuizCreate is a complete quiz object. 

function onLoad(){
    fetchQuizNameQuery().then(val=>{
        console.log(val);
    });
    
}
onLoad();